@model JournalClient.Models.Journal

@{
    ViewData["Title"] = "Edit";
}



<div class="col-11 mx-auto p-0">
    <div class="card">
        <div class="card-header bg-success text-uppercase text-white text-center" style="height:40px;">
            <h5>Edit Journal</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <form asp-action="Edit" id="MyForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="JournalNumber" class="form-label"></label>
                                <input asp-for="JournalNumber" class="form-control" />
                                <span asp-validation-for="JournalNumber" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="JournalDate" class="form-label"></label>
                                <input asp-for="JournalDate" class="form-control" />
                                <span asp-validation-for="JournalDate" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4 mb-3">
                                <label asp-for="SupplierID" class="form-label"></label>
                                <select asp-for="SupplierID" class="form-control" asp-items="ViewBag.SupplierList"></select>
                                <span asp-validation-for="SupplierID" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="BaseCurrencyId" class="form-label"></label>
                                <select asp-for="BaseCurrencyId" class="form-control" asp-items="ViewBag.CurrencyList"></select>
                                <span asp-validation-for="BaseCurrencyId" class="text-danger"></span>

                            </div>
                            <div class="col-md-4 mb-3">
                                <label asp-for="PoCurrencyId" class="form-label"></label>
                                <select asp-for="PoCurrencyId" class="form-control" asp-items="ViewBag.CurrencyList"></select>
                                <span asp-validation-for="PoCurrencyId" class="text-danger"></span>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="ExchangeRate" class="form-label"></label>
                                <input asp-for="ExchangeRate" class="form-control" />
                                <span asp-validation-for="ExchangeRate" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="DiscountPercentage" class="form-label"></label>
                                <input asp-for="DiscountPercentage" class="form-control" />
                                <span asp-validation-for="DiscountPercentage" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="QuotationNumber" class="form-label"></label>
                                <input asp-for="QuotationNumber" class="form-control" />
                                <span asp-validation-for="QuotationNumber" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="QuotationDate" class="form-label"></label>
                                <input asp-for="QuotationDate" class="form-control" />
                                <span asp-validation-for="QuotationDate" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="PaymentTerms" class="form-label"></label>
                            <input asp-for="PaymentTerms" class="form-control" />
                            <span asp-validation-for="PaymentTerms" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Remarks" class="form-label"></label>
                            <input asp-for="Remarks" class="form-control" />
                            <span asp-validation-for="Remarks" class="text-danger"></span>
                        </div>

                        <div class="tab">
                            <button type="button" class="tablinks" onclick="openTab(this, 'JournalBS')">Journal BS</button>
                            <button type="button" class="tablinks" onclick="openTab(this, 'JournalPL')">Journal PL</button>
                        </div>



                        <div id="JournalBS" class="tabcontent col-12 mx-2">
                            <table id="JournalBSTable" class=" table table-borderless table-sm mb-0 pb-0">
                                <thead>
                                    <tr>
                                        <th>
                                            Product
                                        </th>
                                        <th>
                                            Quantity
                                        </th>
                                        <th>
                                            FOB
                                        </th>
                                        <th>
                                            Price
                                        </th>
                                        <th>
                                            Unit
                                        </th>
                                        <th>
                                            Amount
                                        </th>
                                       
                                        <th style="width: 60px">
                                            <button id="buttonAddDetailRow" type="button" class="btn btn btn-secondary visible" onclick="AddItem(this, 'JournalBSTable')">
                                                Add
                                            </button>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.JournalBSs.Count; i++)
                                    {
                                        <tr>
                                            <td>

                                                <select asp-for="@Model.JournalBSs[i].ProductCode" asp-items="ViewBag.ProductList" class="form-control product-code-select"></select>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalBSs[i].Quantity" type="number" class="form-control product-quantity" />
                                                <span asp-validation-for="@Model.JournalBSs[i].Quantity" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalBSs[i].Fob" type="number" class="form-control" />
                                                <span asp-validation-for="@Model.JournalBSs[i].Fob" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalBSs[i].PrcInBaseCurr" type="number" class="form-control unit-price" />
                                                <span asp-validation-for="@Model.JournalBSs[i].PrcInBaseCurr" class="text-danger"></span>
                                            </td>
                                            <td >
                                               
                                                <select asp-for="@Model.JournalBSs[i].UnitName" class="form-control unit-name" asp-items="ViewBag.UnitList"></select>
                                                <span asp-validation-for="@Model.JournalBSs[i].UnitName" class="text-danger"></span>

                                            </td>
                                            <td>
                                                <input  type="number" class="form-control product-amount" />
                                                <span class="text-danger"></span>
                                            </td>
                                            
                                            
                                            <td style="width : 60px;">
                                                <button id="btnremove-@i" type="button" class="btn btn-danger btn-sm visible" onclick="DeleteItem(this, 'JournalBSTable')">
                                                    Delete
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>



                        <div id="JournalPL" class="tabcontent col-12 mx-2">
                            <table id="JournalPLTable" class="table table-borderless table-sm mb-0 pb-0">
                                <thead>
                                    <tr>
                                        <th>
                                            Account
                                        </th>
                                        <th>
                                            Amount
                                        </th>
                                        <th>
                                            Description
                                        </th>
                                        <th>
                                            Unit
                                        </th>
                                        <th>
                                            Start Journal PL
                                        </th>
                                        <th>
                                            Start Date
                                        </th>
                                        <th style="width: 60px">
                                            <button id="buttonAddDetailRow" type="button" class="btn btn btn-secondary visible" onclick="AddItem(this, 'JournalPLTable')">
                                                Add
                                            </button>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.JournalPLs.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                @* <input asp-for="@Model.PoDetails[i].ProductCode" class="form-control"/> *@
                                                <select asp-for="@Model.JournalPLs[i].AccountId" asp-items="ViewBag.AccountList" class="form-control"></select>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalPLs[i].Amount" type="number" class="form-control" />
                                                <span asp-validation-for="@Model.JournalPLs[i].Amount" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalPLs[i].Description" class="form-control" />
                                                <span asp-validation-for="@Model.JournalPLs[i].Description" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalPLs[i].UnitID" type="number" class="form-control" />
                                                <span asp-validation-for="@Model.JournalPLs[i].UnitID" class="text-danger"></span>
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalPLs[i].Isstart" class="form-control" />
                                            </td>
                                            <td>
                                                <input asp-for="@Model.JournalPLs[i].StartDate" class="form-control" />
                                            </td>
                                            <td style="width : 60px;">
                                                <button id="btnremove-@i" type="button" class="btn btn-danger btn-sm visible" onclick="DeleteItem(this, 'JournalPLTable')">
                                                    Delete
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Edit" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
</div>

@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

                // 1. Target the specific table element
        const dynamicTable = document.getElementById('JournalBSTable');

        if (dynamicTable) {
           
            const itemRows = dynamicTable.querySelectorAll('tr');

            itemRows.forEach(row => {
                const priceInput = row.querySelector('.unit-price');
                const quantityInput = row.querySelector('.product-quantity');
                const amountDisplay = row.querySelector('.product-amount');

                // Define the calculation function (same as before)
                function calculateRowAmount() {
                    const price = +priceInput.value || 0;
                    const quantity = +quantityInput.value || 0;
                    const amount = price * quantity;

                    if (amountDisplay) {
                        // Update based on element type (input or display element)
                        if (amountDisplay.tagName === 'INPUT') {
                            amountDisplay.value = amount.toFixed(2);
                        } else {
                            amountDisplay.textContent = amount.toFixed(2);
                        }
                    }
                }

                // Attach listeners
                if (priceInput) {
                    priceInput.addEventListener('input', calculateRowAmount);
                }

                if (quantityInput) {
                    quantityInput.addEventListener('input', calculateRowAmount);
                }
            });
        }



         document.addEventListener('DOMContentLoaded', function() {

         const selectElements = document.querySelectorAll('.product-code-select');


        selectElements.forEach(selectElement => {
         

            const selectedValue = selectElement.value;
            const selectId = selectElement.id;

            console.log(`Select box ID: ${selectId} changed to: ${selectedValue}`);

            const row = selectElement.closest('tr');
            if (row) {
               updateProductDetails(selectedValue, row);

               const product_amount = row.querySelector('.product-amount');
               const unit_price = row.querySelector('.unit-price');
               const quantity = row.querySelector('.product-quantity');

               product_amount.value = unit_price.value * quantity.value;
            }
         
          });
           
        });

          var journalBS = document.getElementById("JournalBS");
          journalBS.style.display = "block";

          function openTab(event, tabName) {

        var i, tabcontent, tablinks;


        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
          tabcontent[i].style.display = "none";
        }


        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
          tablinks[i].className = tablinks[i].className.replace(" active", "");
        }


        document.getElementById(tabName).style.display = "block";


              event.className += " active";
              console.log(event);

          }
          function AddItem(btn, tableName){
              var table;
              table = document.getElementById(tableName)
              var rows = table.getElementsByTagName('tr')
              var rowOuterHtml = rows[rows.length - 1].outerHTML

              var lastRowIndex = rows.length - 2;
              var nextRowIndex = eval(lastRowIndex) + 1

              rowOuterHtml = rowOuterHtml.replaceAll('_' + lastRowIndex + '_', '_' + nextRowIndex + '_');
              rowOuterHtml = rowOuterHtml.replaceAll('[' + lastRowIndex + ']', '[' + nextRowIndex + ']');
              rowOuterHtml = rowOuterHtml.replaceAll('-' + lastRowIndex , '-' + nextRowIndex );

              var newRow = table.insertRow();
              newRow.innerHTML = rowOuterHtml;

              var x = table.getElementsByTagName("INPUT");



              for(var cnt = 0; cnt < x.length; cnt++){

                  if(x[cnt].type == "text" && x[cnt].id.indexOf('_' + nextRowIndex + '_') > 0)
                  x[cnt].value = ''
                      else if (x[cnt].type == "number" && x[cnt].id.indexOf('_' + nextRowIndex + '_') > 0)
                          x[cnt].value = 0.00;
              }

              RebindValidators()
          }




          function DeleteItem(btn, tableName) {

              var table = document.getElementById(tableName);
              var rows = table.getElementsByTagName('tr');

              if(rows.length == 2){
                  alert("This row cannot be deleted");
                  return
              }
              $(btn).closest('tr').remove();
          }

          function RebindValidators () {

              var $form = $('#MyForm');

              $form.unbind();

              $form.data("validator", null);

              $.validator.unobtrusive.parse($form)

              $form.validate($form.data("unobtrusiveValidation").options)
          }

                  
          const selectElements = document.querySelectorAll('.product-code-select');

        
        selectElements.forEach(selectElement => {
          selectElement.addEventListener('change', function() {
            
            const selectedValue = this.value;
            const selectId = this.id; 

            console.log(`Select box ID: ${selectId} changed to: ${selectedValue}`);
            
            const row = this.closest('tr');
            if (row) {
               updateProductDetails(selectedValue, row);          
            }
          });
        });

         
        async function updateProductDetails(productCode, rowElement) {
            if (!productCode) {
                console.log("No product code selected. Skipping API call.");
                return;
            }

            const apiUrl = `https://localhost:7146/api/product/${productCode}`;

            // Optional: Add a visual loading indicator to the row/page
            // rowElement.classList.add('loading');

            try {
                const response = await fetch(apiUrl, {
                    method: 'GET', 
                    headers: {
                        'Content-Type': 'application/json'
                        
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

                
                const unitPriceInput = rowElement.querySelector('.unit-price');
                if (unitPriceInput) {
                     unitPriceInput.value = data.price;
                }

                const unitSelect = rowElement.querySelector('.unit-name');

                

                if (unitSelect && data.unitId) {
                   unitSelect.value = data.unitId;
                   console.log(unitSelect)
                }

            } catch (error) {
                console.error('Error making API call:', error);
                alert('Failed to load product details. Check the console for more info.');
            } finally {
                // Optional: Remove the visual loading indicator
                // rowElement.classList.remove('loading');
            }
        }

         

    </script>
}
